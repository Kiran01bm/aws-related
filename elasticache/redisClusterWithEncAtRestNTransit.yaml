---
# Copyright 2018 widdix GmbH
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
AWSTemplateFormatVersion: '2010-09-09'
Description: 'ElastiCache redis template'
Metadata:
  'AWS::CloudFormation::Interface':
    ParameterGroups:
    - Label:
        default: 'KMS Parameters'
      Parameters:
      - Service
    - Label:
        default: 'ElastiCache Parameters'
      Parameters:
      - EngineVersion
      - CacheNodeType
      - TransitEncryption
      - AuthToken
      - SnapshotRetentionLimit
      - SnapshotName
      - SubDomainName
      - NumShards
      - NumReplicas
    - Label:
        default: 'Alert Parameters'
      Parameters:
      - Email
      - HttpEndpoint
      - HttpsEndpoint
    - Label:
        default: 'Fallback Parameters'
      Parameters:
      - FallbackEmail
Parameters:
  Service:
    Description: 'Which AWS service is allowed to use this CMK?'
    Type: String
    AllowedValues:
    - 'ALL_SERVICES'
    - 'S3_PUBLIC_ACCESS'
    - connect
    - dms
    - ssm
    - ec2
    - elasticfilesystem
    - es
    - kinesis
    - kinesisvideo
    - lambda
    - lex
    - redshift
    - rds
    - secretsmanager
    - ses
    - s3
    - importexport
    - sqs
    - workmail
    - workspaces
    Default: ALL_SERVICES
  EngineVersion:
    Description: 'Redis version'
    Type: String
    Default: '5.0.0'
    AllowedValues: # aws elasticache describe-cache-engine-versions --engine redis --query "CacheEngineVersions[].EngineVersion"
    - '5.0.4'
    - '5.0.0'
    - '4.0.10'
    - '3.2.6' # 3.2.4 and 3.2.10 do not support encryption
  CacheNodeType:
    Description: 'The compute and memory capacity of the nodes in the node group (shard).'
    Type: 'String'
    Default: 'cache.t2.micro'
  TransitEncryption:
    Description: 'Enable encryption for data in transit? (see https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/in-transit-encryption.html)'
    Type: 'String'
    Default: 'true'
    AllowedValues:
    - 'true'
    - 'false'
  AuthToken:
    Description: 'Optional password (16 to 128 characters) used to authenticate against Redis (requires TransitEncryption := true; leave blank to disable password-protection).'
    Type: 'String'
    Default: INSERT
    MaxLength: 128
  SnapshotRetentionLimit:
    Description: 'The number of days for which ElastiCache retains automatic snapshots before deleting them (set to 0 to disable backups).'
    Type: Number
    Default: 0
    MinValue: 0
    MaxValue: 35
  SnapshotName:
    Description: 'Optional name of a snapshot from which you want to restore (leave blank to create an empty cache).'
    Type: 'String'
    Default: ''
  SubDomainName:
    Description: 'Name that is used to create the DNS entry ยง{SubDomainName}.ยง{HostedZoneName}'
    Type: String
    Default: redis
  HostedZoneIdentifier:
    Description: 'Hosted Zone Id'
    Type: String
    Default: INSERT
  HostedZoneName:
    Description: 'Name that is used to create the DNS entry ยง{SubDomainName}.ยง{HostedZoneName}'
    Type: String
    Default: INSERT
  VPCIdentifier:
    Description: 'VPC Id'
    Type: String
    Default: INSERT
  NumShards:
    Description: 'Number of shards in the cluster.'
    Type: 'Number'
    Default: 1
    MinValue: 1
    MaxValue: 250
  NumReplicas:
    Description: 'Number of replicas per shard.'
    Type: 'Number'
    Default: 1
    MinValue: 0
    MaxValue: 5
  Email:
    Description: 'Optional email address that will receive alerts.'
    Type: String
    Default: 'INSERT'
  HttpEndpoint:
    Description: 'Optional HTTP endpoint that will receive alerts via POST requests.'
    Type: String
    Default: ''
  HttpsEndpoint:
    Description: 'Optional HTTPS endpoint that will receive alerts via POST requests (e.g., a marbot.io endpoint for incident management in Slack).'
    Type: String
    Default: ''
  FallbackEmail:
    Description: 'Optional email address that will receive alerts if alerts can not be delivered.'
    Type: String
    Default: 'INSERT'
Mappings:
  EngineVersionMap:
    '3.2.6':
      CacheParameterGroupFamily: 'redis3.2'
    '4.0.10':
      CacheParameterGroupFamily: 'redis4.0'
    '5.0.0':
      CacheParameterGroupFamily: 'redis5.0'
    '5.0.4':
      CacheParameterGroupFamily: 'redis5.0'
Conditions:
  HasAuthToken: !Not [!Equals [!Ref AuthToken, '']]
  HasSnapshotName: !Not [!Equals [!Ref SnapshotName, '']]
  HasAutomaticFailoverEnabled: !Not [!Equals [!Ref NumReplicas, 0]]
  HasEmail: !Not [!Equals [!Ref Email, '']]
  HasHttpEndpoint: !Not [!Equals [!Ref HttpEndpoint, '']]
  HasHttpsEndpoint: !Not [!Equals [!Ref HttpsEndpoint, '']]
  HasFallbackEmail: !Not [!Equals [!Ref FallbackEmail, '']]
  HasServiceAllServices: !Equals [!Ref Service, 'ALL_SERVICES']
  HasServiceS3PublicAccess: !Equals [!Ref Service, 'S3_PUBLIC_ACCESS']
Resources:
  Key:
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Type: 'AWS::KMS::Key'
    Properties:
      KeyPolicy:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            AWS: !Sub 'arn:aws:iam::${AWS::AccountId}:root'
          Action: 'kms:*'
          Resource: '*'
        - Effect: Allow
          Principal:
            AWS: '*'
          Action:
          - 'kms:Encrypt'
          - 'kms:Decrypt'
          - 'kms:ReEncrypt*'
          - 'kms:GenerateDataKey*'
          - 'kms:CreateGrant'
          - 'kms:ListGrants'
          - 'kms:DescribeKey'
          Resource: '*'
          Condition:
            StringEquals: !If
            - HasServiceAllServices
            - 'kms:CallerAccount': !Ref 'AWS::AccountId'
            - 'kms:CallerAccount': !Ref 'AWS::AccountId'
              'kms:ViaService': !Sub '${Service}.${AWS::Region}.amazonaws.com'
        - !If
          - HasServiceS3PublicAccess
          - Effect: Allow
            Principal:
              AWS: '*'
            Action:
            - 'kms:Decrypt'
            Resource: '*'
            Condition:
              StringEquals:
                'kms:ViaService': !Sub 's3.${AWS::Region}.amazonaws.com'
          - !Ref 'AWS::NoValue'
  KeyAlias:
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Type: 'AWS::KMS::Alias'
    Properties:
      AliasName: !Sub 'alias/${AWS::StackName}'
      TargetKeyId: !Ref Key
  RecordSet:
    Type: 'AWS::Route53::RecordSet'
    Properties:
      HostedZoneId: !Ref HostedZoneIdentifier
      Name: !Sub
      - '${SubDomainName}.${HostedZoneName}'
      - SubDomainName: !Ref SubDomainName
        HostedZoneName: !Ref HostedZoneName
      ResourceRecords:
      - !GetAtt 'ReplicationGroup.PrimaryEndPoint.Address'
      TTL: '60'
      Type: CNAME
  CacheParameterGroup:
    Type: 'AWS::ElastiCache::ParameterGroup'
    Properties:
      CacheParameterGroupFamily: !FindInMap [EngineVersionMap, !Ref EngineVersion, CacheParameterGroupFamily]
      Description: !Ref 'AWS::StackName'
      Properties: {}
  CacheSubnetGroupName:
    Type: AWS::ElastiCache::SubnetGroup
    Properties:
      Description: Cache Subnet Group
      SubnetIds:
        - subnet-XXXXXXXX
        - subnet-YYYYYYYY
        - subnet-ZZZZZZZZ
  SecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: !Ref 'AWS::StackName'
      VpcId: !Ref VPCIdentifier
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 6379
        ToPort: 6379
        CidrIp: 172.31.0.0/16
  ReplicationGroup:
    DeletionPolicy: Snapshot
    UpdateReplacePolicy: Snapshot
    Type: AWS::ElastiCache::ReplicationGroup
    Properties:
      ReplicationGroupDescription: !Ref 'AWS::StackName'
      AtRestEncryptionEnabled: true
      AuthToken: !If [HasAuthToken, !Ref AuthToken, !Ref 'AWS::NoValue']
      AutomaticFailoverEnabled: !If [HasAutomaticFailoverEnabled, true, false]
      CacheNodeType: !Ref CacheNodeType
      CacheParameterGroupName: !Ref CacheParameterGroup
      CacheSubnetGroupName: !Ref CacheSubnetGroupName
      Engine: redis
      EngineVersion: !Ref EngineVersion
      KmsKeyId: !Ref Key
      NotificationTopicArn: !Ref Topic
      NumNodeGroups: !Ref NumShards
      ReplicasPerNodeGroup: !Ref NumReplicas
      PreferredMaintenanceWindow: 'sat:07:00-sat:08:00'
      SecurityGroupIds:
      - !Ref SecurityGroup
      SnapshotName: !If [HasSnapshotName, !Ref SnapshotName, !Ref 'AWS::NoValue']
      SnapshotRetentionLimit: !Ref SnapshotRetentionLimit
      SnapshotWindow: '00:00-03:00'
      TransitEncryptionEnabled: !Ref TransitEncryption
    UpdatePolicy:
      UseOnlineResharding: true
  Topic:
    Type: 'AWS::SNS::Topic'
    Properties: {}
  TopicPolicy:
    Type: 'AWS::SNS::TopicPolicy'
    Properties:
      PolicyDocument:
        Id: Id1
        Version: '2012-10-17'
        Statement:
        - Sid: Sid1
          Effect: Allow
          Principal:
            Service:
            - 'events.amazonaws.com' # Allow CloudWatch Events
            - 'budgets.amazonaws.com' # Allow Budget Notifications
            - 'rds.amazonaws.com' # Allow RDS Events
            - 's3.amazonaws.com' # Allow S3 Event Notifications
            - 'backup.amazonaws.com' # Allow Backup Events
          Action: 'sns:Publish'
          Resource: !Ref Topic
        - Sid: Sid2
          Effect: Allow
          Principal:
            AWS: '*' # Allow CloudWatch Alarms, ElastiCache Notifications, Elastic Beanstalk Notifications, Auto Scaling Notification
          Action: 'sns:Publish'
          Resource: !Ref Topic
          Condition:
            StringEquals:
              'AWS:SourceOwner': !Ref 'AWS::AccountId'
        - Sid: Sid3
          Effect: Allow
          Principal:
            Service: 'ses.amazonaws.com' # Allow SES Notifications & Events
          Action: 'sns:Publish'
          Resource: !Ref Topic
          Condition:
            StringEquals:
              'AWS:Referer': !Ref 'AWS::AccountId'
      Topics:
      - !Ref Topic
  FallbackTopic:
    Type: 'AWS::SNS::Topic'
    Properties: {}
  NumberOfNotificationsFailedTooHighAlarm:
    Type: 'AWS::CloudWatch::Alarm'
    Properties:
      AlarmDescription: 'Alerts could not be delivered'
      Namespace: 'AWS/SNS'
      MetricName: NumberOfNotificationsFailed
      Statistic: Sum
      Period: 60
      EvaluationPeriods: 1
      ComparisonOperator: GreaterThanThreshold
      Threshold: 0
      AlarmActions:
      - !Ref FallbackTopic
      Dimensions:
      - Name: TopicName
        Value: !GetAtt Topic.TopicName
      TreatMissingData: notBreaching
  EmailSubscription:
    Condition: HasEmail
    Type: 'AWS::SNS::Subscription'
    Properties:
      Endpoint: !Ref Email
      Protocol: email
      TopicArn: !Ref Topic
  HttpEndpointSubscription:
    Condition: HasHttpEndpoint
    Type: 'AWS::SNS::Subscription'
    Properties:
      DeliveryPolicy:
        healthyRetryPolicy:
          minDelayTarget: 1
          maxDelayTarget: 60
          numRetries: 100
          numNoDelayRetries: 0
          backoffFunction: exponential
        throttlePolicy:
          maxReceivesPerSecond: 1
      Endpoint: !Ref HttpEndpoint
      Protocol: http
      TopicArn: !Ref Topic
  HttpsEndpointSubscription:
    Condition: HasHttpsEndpoint
    Type: 'AWS::SNS::Subscription'
    Properties:
      DeliveryPolicy:
        healthyRetryPolicy:
          minDelayTarget: 1
          maxDelayTarget: 60
          numRetries: 100
          numNoDelayRetries: 0
          backoffFunction: exponential
        throttlePolicy:
          maxReceivesPerSecond: 1
      Endpoint: !Ref HttpsEndpoint
      Protocol: https
      TopicArn: !Ref Topic
  FallbackEmailSubscription:
    Condition: HasFallbackEmail
    Type: 'AWS::SNS::Subscription'
    Properties:
      Endpoint: !Ref FallbackEmail
      Protocol: email
      TopicArn: !Ref FallbackTopic
  Node1CPUUtilizationTooHighAlarm:
    Type: 'AWS::CloudWatch::Alarm'
    Properties:
      AlarmDescription: 'Average CPU utilization over last 10 minutes higher than 80%'
      Namespace: 'AWS/ElastiCache'
      MetricName: CPUUtilization
      Statistic: Average
      Period: 600
      EvaluationPeriods: 1
      ComparisonOperator: GreaterThanThreshold
      Threshold: 80
      AlarmActions:
      - !Ref Topic
      Dimensions:
      - Name: CacheClusterId
        Value: !Sub '${ReplicationGroup}-001'
  Node1SwapUsageTooHighAlarm:
    Type: 'AWS::CloudWatch::Alarm'
    Properties:
      AlarmDescription: 'Average swap usage over last 10 minutes higher than 64 MB, performance may suffer'
      Namespace: 'AWS/ElastiCache'
      MetricName: SwapUsage
      Statistic: Average
      Period: 600
      EvaluationPeriods: 1
      ComparisonOperator: GreaterThanThreshold
      Threshold: 67108864 # 64 MB in Bytes
      AlarmActions:
      - !Ref Topic
      Dimensions:
      - Name: CacheClusterId
        Value: !Sub '${ReplicationGroup}-001'
  Node1EvictionsTooHighAlarm:
    Type: 'AWS::CloudWatch::Alarm'
    Properties:
      AlarmDescription: 'Average evictions over last 10 minutes higher than 1000, may enough memory for all keys'
      Namespace: 'AWS/ElastiCache'
      MetricName: Evictions
      Statistic: Average
      Period: 600
      EvaluationPeriods: 1
      ComparisonOperator: GreaterThanThreshold
      Threshold: 1000
      AlarmActions:
      - !Ref Topic
      Dimensions:
      - Name: CacheClusterId
        Value: !Sub '${ReplicationGroup}-001'
  Node1ReplicationLagTooHighAlarm:
    Type: 'AWS::CloudWatch::Alarm'
    Properties:
      AlarmDescription: 'Average replication lag over last 10 minutes higher than 30 seconds'
      Namespace: 'AWS/ElastiCache'
      MetricName: ReplicationLag
      Statistic: Average
      Period: 600
      EvaluationPeriods: 1
      ComparisonOperator: GreaterThanThreshold
      Threshold: 30
      AlarmActions:
      - !Ref Topic
      Dimensions:
      - Name: CacheClusterId
        Value: !Sub '${ReplicationGroup}-001'
Outputs:
  TemplateID:
    Description: 'cloudonaut.io template id.'
    Value: 'state/elasticache-redis'
  TemplateVersion:
    Description: 'cloudonaut.io template version.'
    Value: '__VERSION__'
  StackName:
    Description: 'Stack name.'
    Value: !Sub '${AWS::StackName}'
  ClusterName:
    Description: 'The name of the cluster'
    Value: !Ref ReplicationGroup
    Export:
      Name: !Sub '${AWS::StackName}-ClusterName'
  PrimaryEndPointAddress:
    Description: 'The DNS address of the primary read-write cache node.'
    Value: !GetAtt 'ReplicationGroup.PrimaryEndPoint.Address'
    Export:
      Name: !Sub '${AWS::StackName}-PrimaryEndPointAddress'
  PrimaryEndPointPort:
    Description: 'The port that the primary read-write cache engine is listening on.'
    Value: !GetAtt 'ReplicationGroup.PrimaryEndPoint.Port'
    Export:
      Name: !Sub '${AWS::StackName}-PrimaryEndPointPort'
  TopicARN:
    Description: 'The ARN of the alert topic.'
    Value: !Ref Topic
    Export:
      Name: !Sub '${AWS::StackName}-TopicARN'
